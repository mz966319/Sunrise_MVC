// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sunrise.DataAccess.Data;

#nullable disable

namespace Sunrise.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241130195603_newData")]
    partial class newData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator().HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Sunrise.Models.Bus", b =>
                {
                    b.Property<int>("BusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusID"));

                    b.Property<int>("BusNumber")
                        .HasColumnType("int");

                    b.Property<string>("BusPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusPlate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BusID");

                    b.ToTable("Busses");

                    b.HasData(
                        new
                        {
                            BusID = 1,
                            BusNumber = 1,
                            BusPath = "Shemesi",
                            BusPlate = "ABC",
                            BusType = "Hilox",
                            DriverName = "Mo",
                            DriverPhone = "0500"
                        });
                });

            modelBuilder.Entity("Sunrise.Models.Country", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryID"));

                    b.Property<string>("CountryNameAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryNameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryID");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryID = 1,
                            CountryNameAR = "مصر",
                            CountryNameEN = "Egypt"
                        },
                        new
                        {
                            CountryID = 2,
                            CountryNameAR = "السعودية",
                            CountryNameEN = "Saudi Arabia"
                        },
                        new
                        {
                            CountryID = 3,
                            CountryNameAR = "فلسطين",
                            CountryNameEN = "Palestine"
                        },
                        new
                        {
                            CountryID = 4,
                            CountryNameAR = "اليمن",
                            CountryNameEN = "Yemen"
                        },
                        new
                        {
                            CountryID = 5,
                            CountryNameAR = "السودان",
                            CountryNameEN = "Sudan"
                        },
                        new
                        {
                            CountryID = 6,
                            CountryNameAR = "نيجيريا",
                            CountryNameEN = "Nigeria"
                        },
                        new
                        {
                            CountryID = 7,
                            CountryNameAR = "لبنان",
                            CountryNameEN = "Lebanon"
                        },
                        new
                        {
                            CountryID = 8,
                            CountryNameAR = "إرتريا",
                            CountryNameEN = "Eritrea"
                        },
                        new
                        {
                            CountryID = 9,
                            CountryNameAR = "تركيا",
                            CountryNameEN = "Turkey"
                        },
                        new
                        {
                            CountryID = 10,
                            CountryNameAR = "الأردن",
                            CountryNameEN = "Jordan"
                        },
                        new
                        {
                            CountryID = 11,
                            CountryNameAR = "المغرب",
                            CountryNameEN = "Morocco"
                        },
                        new
                        {
                            CountryID = 12,
                            CountryNameAR = "بريطانيا",
                            CountryNameEN = "United Kingdom"
                        },
                        new
                        {
                            CountryID = 13,
                            CountryNameAR = "سوريا",
                            CountryNameEN = "Syria"
                        },
                        new
                        {
                            CountryID = 14,
                            CountryNameAR = "كينيا",
                            CountryNameEN = "Kenya"
                        },
                        new
                        {
                            CountryID = 15,
                            CountryNameAR = "الصومال",
                            CountryNameEN = "Somalia"
                        },
                        new
                        {
                            CountryID = 16,
                            CountryNameAR = "تشاد",
                            CountryNameEN = "Chad"
                        },
                        new
                        {
                            CountryID = 17,
                            CountryNameAR = "أفغانستان",
                            CountryNameEN = "Afghanistan"
                        },
                        new
                        {
                            CountryID = 18,
                            CountryNameAR = "مالي",
                            CountryNameEN = "Mali"
                        },
                        new
                        {
                            CountryID = 19,
                            CountryNameAR = "باكستان",
                            CountryNameEN = "Pakistan"
                        },
                        new
                        {
                            CountryID = 20,
                            CountryNameAR = "الهند",
                            CountryNameEN = "India"
                        },
                        new
                        {
                            CountryID = 21,
                            CountryNameAR = "الولايات المتحدة الأمريكية",
                            CountryNameEN = "United States of America"
                        },
                        new
                        {
                            CountryID = 22,
                            CountryNameAR = "إثيوبيا",
                            CountryNameEN = "Ethiopia"
                        },
                        new
                        {
                            CountryID = 23,
                            CountryNameAR = "تونس",
                            CountryNameEN = "Tunisia"
                        },
                        new
                        {
                            CountryID = 24,
                            CountryNameAR = "الجزائر",
                            CountryNameEN = "Algeria"
                        });
                });

            modelBuilder.Entity("Sunrise.Models.CurrentControl", b =>
                {
                    b.Property<int>("CurrentControlID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrentControlID"));

                    b.Property<bool>("Absent")
                        .HasColumnType("bit");

                    b.Property<int?>("Behaviour")
                        .HasColumnType("int");

                    b.Property<int>("ClassID")
                        .HasColumnType("int");

                    b.Property<int>("ClassWork")
                        .HasColumnType("int");

                    b.Property<int>("ExamMark")
                        .HasColumnType("int");

                    b.Property<int>("HomeWork")
                        .HasColumnType("int");

                    b.Property<int?>("Practical")
                        .HasColumnType("int");

                    b.Property<int>("Project")
                        .HasColumnType("int");

                    b.Property<int>("Quiz1")
                        .HasColumnType("int");

                    b.Property<int?>("Quiz2")
                        .HasColumnType("int");

                    b.Property<int?>("Quiz3")
                        .HasColumnType("int");

                    b.Property<string>("StudentID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.Property<int>("YearSemesterID")
                        .HasColumnType("int");

                    b.HasKey("CurrentControlID");

                    b.HasIndex("StudentID");

                    b.HasIndex("SubjectID");

                    b.HasIndex("YearSemesterID");

                    b.ToTable("CurrentControls");
                });

            modelBuilder.Entity("Sunrise.Models.Grade", b =>
                {
                    b.Property<int>("GradeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeID"));

                    b.Property<string>("CertificateNameAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertificateNameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradeLevel")
                        .HasColumnType("int");

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradeID");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            GradeID = 1,
                            CertificateNameAR = "روضة أول",
                            CertificateNameEN = "Kindergarten First Grade",
                            GradeLevel = -1,
                            GradeName = "KG 1"
                        },
                        new
                        {
                            GradeID = 2,
                            CertificateNameAR = "روضة ثاني",
                            CertificateNameEN = "Kindergarten Seconde Grade",
                            GradeLevel = -2,
                            GradeName = "KG 2"
                        },
                        new
                        {
                            GradeID = 3,
                            CertificateNameAR = "روضة ثالث",
                            CertificateNameEN = "Kindergarten Third Grade",
                            GradeLevel = -3,
                            GradeName = "KG 3"
                        },
                        new
                        {
                            GradeID = 4,
                            CertificateNameAR = "الصف الأول الابتدائى",
                            CertificateNameEN = "Elementary First Grade",
                            GradeLevel = 1,
                            GradeName = "Grade 1"
                        },
                        new
                        {
                            GradeID = 5,
                            CertificateNameAR = "الصف الثانى الابتدائى",
                            CertificateNameEN = "Elementary Seconde Grade",
                            GradeLevel = 2,
                            GradeName = "Grade 2"
                        },
                        new
                        {
                            GradeID = 6,
                            CertificateNameAR = "الصف الثالث الابتدائى",
                            CertificateNameEN = "Elementary Third Grade",
                            GradeLevel = 3,
                            GradeName = "Grade 3"
                        },
                        new
                        {
                            GradeID = 7,
                            CertificateNameAR = "الصف الرابع الابتدائى",
                            CertificateNameEN = "Elementary Fourth Grade",
                            GradeLevel = 4,
                            GradeName = "Grade 4"
                        },
                        new
                        {
                            GradeID = 8,
                            CertificateNameAR = "الصف الخامس الابتدائى",
                            CertificateNameEN = "Elementary Fifth Grade",
                            GradeLevel = 5,
                            GradeName = "Grade 5"
                        },
                        new
                        {
                            GradeID = 9,
                            CertificateNameAR = "الصف السادس الابتدائى",
                            CertificateNameEN = "Elementary Sixth Grade",
                            GradeLevel = 6,
                            GradeName = "Grade 6"
                        },
                        new
                        {
                            GradeID = 10,
                            CertificateNameAR = "الصف الأول المتوسط",
                            CertificateNameEN = "Intermediate First Grade",
                            GradeLevel = 7,
                            GradeName = "Grade 7"
                        },
                        new
                        {
                            GradeID = 11,
                            CertificateNameAR = "الصف الثانى المتوسط",
                            CertificateNameEN = "Intermediate Second Grade",
                            GradeLevel = 8,
                            GradeName = "Grade 8"
                        },
                        new
                        {
                            GradeID = 12,
                            CertificateNameAR = "الصف الثالث المتوسط",
                            CertificateNameEN = "Intermediate Third Grade",
                            GradeLevel = 9,
                            GradeName = "Grade 9"
                        });
                });

            modelBuilder.Entity("Sunrise.Models.GradeClass", b =>
                {
                    b.Property<int>("GradeClassID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeClassID"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradeID")
                        .HasColumnType("int");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradeClassID");

                    b.HasIndex("GradeID");

                    b.ToTable("GradeClasses");

                    b.HasData(
                        new
                        {
                            GradeClassID = 1,
                            ClassName = "A",
                            GradeID = 1,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 2,
                            ClassName = "A",
                            GradeID = 2,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 3,
                            ClassName = "B",
                            GradeID = 2,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 4,
                            ClassName = "C",
                            GradeID = 2,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 5,
                            ClassName = "D",
                            GradeID = 2,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 6,
                            ClassName = "E",
                            GradeID = 2,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 7,
                            ClassName = "A",
                            GradeID = 3,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 8,
                            ClassName = "B",
                            GradeID = 3,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 9,
                            ClassName = "C",
                            GradeID = 3,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 10,
                            ClassName = "D",
                            GradeID = 3,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 11,
                            ClassName = "E",
                            GradeID = 3,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 12,
                            ClassName = "BA",
                            GradeID = 4,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 13,
                            ClassName = "BB",
                            GradeID = 4,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 14,
                            ClassName = "BC",
                            GradeID = 4,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 15,
                            ClassName = "GA",
                            GradeID = 4,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 16,
                            ClassName = "GB",
                            GradeID = 4,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 17,
                            ClassName = "GC",
                            GradeID = 4,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 18,
                            ClassName = "BA",
                            GradeID = 5,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 19,
                            ClassName = "BB",
                            GradeID = 5,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 20,
                            ClassName = "BC",
                            GradeID = 5,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 21,
                            ClassName = "GA",
                            GradeID = 5,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 22,
                            ClassName = "GB",
                            GradeID = 5,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 23,
                            ClassName = "GC",
                            GradeID = 5,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 24,
                            ClassName = "BA",
                            GradeID = 6,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 25,
                            ClassName = "BB",
                            GradeID = 6,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 26,
                            ClassName = "BC",
                            GradeID = 6,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 27,
                            ClassName = "GA",
                            GradeID = 6,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 28,
                            ClassName = "GB",
                            GradeID = 6,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 29,
                            ClassName = "GC",
                            GradeID = 6,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 30,
                            ClassName = "GA",
                            GradeID = 7,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 31,
                            ClassName = "GB",
                            GradeID = 7,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 32,
                            ClassName = "GA",
                            GradeID = 8,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 33,
                            ClassName = "GB",
                            GradeID = 8,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 34,
                            ClassName = "GA",
                            GradeID = 9,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 35,
                            ClassName = "GB",
                            GradeID = 9,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 36,
                            ClassName = "GA",
                            GradeID = 10,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 37,
                            ClassName = "GB",
                            GradeID = 10,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 38,
                            ClassName = "GA",
                            GradeID = 11,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 39,
                            ClassName = "GB",
                            GradeID = 11,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 40,
                            ClassName = "GA",
                            GradeID = 12,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 41,
                            ClassName = "GB",
                            GradeID = 12,
                            SectionName = "Girls"
                        },
                        new
                        {
                            GradeClassID = 42,
                            ClassName = "BA",
                            GradeID = 7,
                            SectionName = "Boys"
                        },
                        new
                        {
                            GradeClassID = 43,
                            ClassName = "BB",
                            GradeID = 7,
                            SectionName = "Boys"
                        },
                        new
                        {
                            GradeClassID = 44,
                            ClassName = "BA",
                            GradeID = 8,
                            SectionName = "Boys"
                        },
                        new
                        {
                            GradeClassID = 45,
                            ClassName = "BB",
                            GradeID = 8,
                            SectionName = "Boys"
                        },
                        new
                        {
                            GradeClassID = 46,
                            ClassName = "BA",
                            GradeID = 9,
                            SectionName = "Boys"
                        },
                        new
                        {
                            GradeClassID = 47,
                            ClassName = "BB",
                            GradeID = 9,
                            SectionName = "Boys"
                        },
                        new
                        {
                            GradeClassID = 48,
                            ClassName = "BA",
                            GradeID = 10,
                            SectionName = "Boys"
                        },
                        new
                        {
                            GradeClassID = 49,
                            ClassName = "BB",
                            GradeID = 10,
                            SectionName = "Boys"
                        },
                        new
                        {
                            GradeClassID = 50,
                            ClassName = "BA",
                            GradeID = 11,
                            SectionName = "Boys"
                        },
                        new
                        {
                            GradeClassID = 51,
                            ClassName = "BB",
                            GradeID = 11,
                            SectionName = "Boys"
                        },
                        new
                        {
                            GradeClassID = 52,
                            ClassName = "BA",
                            GradeID = 12,
                            SectionName = "Boys"
                        },
                        new
                        {
                            GradeClassID = 53,
                            ClassName = "BB",
                            GradeID = 12,
                            SectionName = "Boys"
                        });
                });

            modelBuilder.Entity("Sunrise.Models.Nationality", b =>
                {
                    b.Property<int>("NationalityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NationalityID"));

                    b.Property<string>("NationalityARFemale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalityARMale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalityEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NationalityID");

                    b.ToTable("Nationalities");

                    b.HasData(
                        new
                        {
                            NationalityID = 1,
                            NationalityARFemale = "مصرية",
                            NationalityARMale = "مصري",
                            NationalityEN = "Egyptian"
                        },
                        new
                        {
                            NationalityID = 2,
                            NationalityARFemale = "سعودية",
                            NationalityARMale = "سعودي",
                            NationalityEN = "Saudi"
                        },
                        new
                        {
                            NationalityID = 3,
                            NationalityARFemale = "فلسطينية",
                            NationalityARMale = "فلسطيني",
                            NationalityEN = "Palestinian"
                        },
                        new
                        {
                            NationalityID = 4,
                            NationalityARFemale = "يمنية",
                            NationalityARMale = "يمني",
                            NationalityEN = "Yemeni"
                        },
                        new
                        {
                            NationalityID = 5,
                            NationalityARFemale = "سودانية",
                            NationalityARMale = "سوداني",
                            NationalityEN = "Sudanese"
                        },
                        new
                        {
                            NationalityID = 6,
                            NationalityARFemale = "نيجيرية",
                            NationalityARMale = "نيجيرى",
                            NationalityEN = "Nigerian"
                        },
                        new
                        {
                            NationalityID = 7,
                            NationalityARFemale = "لبنانية",
                            NationalityARMale = "لبناني",
                            NationalityEN = "Lebanese"
                        },
                        new
                        {
                            NationalityID = 8,
                            NationalityARFemale = "ارترية",
                            NationalityARMale = "ارترى",
                            NationalityEN = "Eritrean"
                        },
                        new
                        {
                            NationalityID = 9,
                            NationalityARFemale = "تركية",
                            NationalityARMale = "تركى",
                            NationalityEN = "Turkish"
                        },
                        new
                        {
                            NationalityID = 10,
                            NationalityARFemale = "أردنية",
                            NationalityARMale = "أردني",
                            NationalityEN = "Jordanian"
                        },
                        new
                        {
                            NationalityID = 11,
                            NationalityARFemale = "مغربية",
                            NationalityARMale = "مغربي",
                            NationalityEN = "Moroccan"
                        },
                        new
                        {
                            NationalityID = 12,
                            NationalityARFemale = "بريطانية",
                            NationalityARMale = "بريطاني",
                            NationalityEN = "British"
                        },
                        new
                        {
                            NationalityID = 13,
                            NationalityARFemale = "سورية",
                            NationalityARMale = "سوري",
                            NationalityEN = "Syrian"
                        },
                        new
                        {
                            NationalityID = 14,
                            NationalityARFemale = "كينية",
                            NationalityARMale = "كيني",
                            NationalityEN = "Kenyan"
                        },
                        new
                        {
                            NationalityID = 15,
                            NationalityARFemale = "صومالية",
                            NationalityARMale = "صومالي",
                            NationalityEN = "Somali"
                        },
                        new
                        {
                            NationalityID = 16,
                            NationalityARFemale = "تشادية",
                            NationalityARMale = "تشادى",
                            NationalityEN = "Chadian"
                        },
                        new
                        {
                            NationalityID = 17,
                            NationalityARFemale = "افغانية",
                            NationalityARMale = "افغاني",
                            NationalityEN = "Afghan"
                        },
                        new
                        {
                            NationalityID = 18,
                            NationalityARFemale = "مالية",
                            NationalityARMale = "مالى",
                            NationalityEN = "Malian"
                        },
                        new
                        {
                            NationalityID = 19,
                            NationalityARFemale = "باكستانية",
                            NationalityARMale = "باكستانى",
                            NationalityEN = "Pakistani"
                        },
                        new
                        {
                            NationalityID = 20,
                            NationalityARFemale = "هندية",
                            NationalityARMale = "هندي",
                            NationalityEN = "Indian"
                        },
                        new
                        {
                            NationalityID = 21,
                            NationalityARFemale = "أمريكية",
                            NationalityARMale = "أمريكي",
                            NationalityEN = "American"
                        },
                        new
                        {
                            NationalityID = 22,
                            NationalityARFemale = "اثيوبية",
                            NationalityARMale = "اثيوبي",
                            NationalityEN = "Ethiopian"
                        },
                        new
                        {
                            NationalityID = 23,
                            NationalityARFemale = "تونسية",
                            NationalityARMale = "تونسي",
                            NationalityEN = "Tunisian"
                        },
                        new
                        {
                            NationalityID = 24,
                            NationalityARFemale = "جزائرية",
                            NationalityARMale = "جزائري",
                            NationalityEN = "Algerian"
                        });
                });

            modelBuilder.Entity("Sunrise.Models.PreviousSchool", b =>
                {
                    b.Property<int>("PreviousSchoolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PreviousSchoolID"));

                    b.Property<string>("PreviousSchoolNameAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousSchoolNameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PreviousSchoolID");

                    b.ToTable("PreviousSchools");

                    b.HasData(
                        new
                        {
                            PreviousSchoolID = 1,
                            PreviousSchoolNameAR = "مدارس شروق الشمس العالمية",
                            PreviousSchoolNameEN = "Sunrise International Schools"
                        });
                });

            modelBuilder.Entity("Sunrise.Models.Student", b =>
                {
                    b.Property<string>("StudentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly?>("AdmissionDate")
                        .HasColumnType("date");

                    b.Property<bool>("AuditorFlag")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int?>("BirthPlaceID")
                        .HasColumnType("int");

                    b.Property<bool>("BlockFlag")
                        .HasColumnType("bit");

                    b.Property<bool>("BusFlag")
                        .HasColumnType("bit");

                    b.Property<int?>("BusID")
                        .HasColumnType("int");

                    b.Property<string>("BusSubscription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrentClassID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("IDEndDate")
                        .HasColumnType("date");

                    b.Property<string>("IDNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MatexParentID")
                        .HasColumnType("int");

                    b.Property<int?>("MatexStudentID")
                        .HasColumnType("int");

                    b.Property<int?>("NationalityID")
                        .HasColumnType("int");

                    b.Property<string>("ParentPhone1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentPhones2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("PassportEndDate")
                        .HasColumnType("date");

                    b.Property<int?>("PreviousSchoolID")
                        .HasColumnType("int");

                    b.Property<int>("StudentActiveFlag")
                        .HasColumnType("int");

                    b.Property<string>("StudentNameAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TemporaryClassID")
                        .HasColumnType("int");

                    b.Property<bool>("TmpFlag")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentID");

                    b.HasIndex("BirthPlaceID");

                    b.HasIndex("BusID");

                    b.HasIndex("CurrentClassID");

                    b.HasIndex("NationalityID");

                    b.HasIndex("PreviousSchoolID");

                    b.HasIndex("TemporaryClassID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Sunrise.Models.Subject", b =>
                {
                    b.Property<int>("SubjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectID"));

                    b.Property<int>("NoorID")
                        .HasColumnType("int");

                    b.Property<string>("NoorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StaticFlag")
                        .HasColumnType("bit");

                    b.Property<string>("SubjectNameAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectNameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubjectID");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectID = 1,
                            NoorID = 291,
                            NoorName = "القرآن الكريم والدراسات الإسلامية",
                            StaticFlag = false,
                            SubjectNameAR = "الدراسات الإسلامية",
                            SubjectNameEN = "Islamic St."
                        },
                        new
                        {
                            SubjectID = 2,
                            NoorID = 157,
                            NoorName = "اللغة العربية",
                            StaticFlag = false,
                            SubjectNameAR = "اللغة العربية",
                            SubjectNameEN = "Arabic"
                        },
                        new
                        {
                            SubjectID = 3,
                            NoorID = 289,
                            NoorName = "الإجتماعيات",
                            StaticFlag = false,
                            SubjectNameAR = "الإجتماعيات",
                            SubjectNameEN = "Social Studies"
                        },
                        new
                        {
                            SubjectID = 4,
                            NoorID = 14,
                            NoorName = "اللغة الإنجليزية",
                            StaticFlag = false,
                            SubjectNameAR = "اللغة الإنجليزية",
                            SubjectNameEN = "English"
                        },
                        new
                        {
                            SubjectID = 5,
                            NoorID = 200548,
                            NoorName = "اللغة الفرنسية",
                            StaticFlag = false,
                            SubjectNameAR = "اللغة الفرنسية",
                            SubjectNameEN = "French"
                        },
                        new
                        {
                            SubjectID = 11,
                            NoorID = 16,
                            NoorName = "الرياضيات",
                            StaticFlag = false,
                            SubjectNameAR = "الرياضيات",
                            SubjectNameEN = "Mathematics"
                        },
                        new
                        {
                            SubjectID = 12,
                            NoorID = 201110,
                            NoorName = "اجتماعيات باللغة الانجليزية",
                            StaticFlag = false,
                            SubjectNameAR = "الاجتماعيات (بالانجليزي)",
                            SubjectNameEN = "Social Studies (Eng)"
                        },
                        new
                        {
                            SubjectID = 14,
                            NoorID = 46,
                            NoorName = "الحاسب الآلي",
                            StaticFlag = false,
                            SubjectNameAR = "الحاسب الآلي",
                            SubjectNameEN = "Computer"
                        },
                        new
                        {
                            SubjectID = 6,
                            NoorID = 74,
                            NoorName = "العلوم",
                            StaticFlag = false,
                            SubjectNameAR = "العلوم",
                            SubjectNameEN = "Science"
                        },
                        new
                        {
                            SubjectID = 15,
                            NoorID = 30,
                            NoorName = "التربية البدنية",
                            StaticFlag = true,
                            SubjectNameAR = "التربية البدنية",
                            SubjectNameEN = "Physical Education"
                        },
                        new
                        {
                            SubjectID = 16,
                            NoorID = 0,
                            NoorName = "السلوك",
                            StaticFlag = true,
                            SubjectNameAR = "السلوك",
                            SubjectNameEN = "Conduct"
                        },
                        new
                        {
                            SubjectID = 17,
                            NoorID = 0,
                            NoorName = "المواظبة",
                            StaticFlag = true,
                            SubjectNameAR = "المواظبة",
                            SubjectNameEN = "Attendance"
                        });
                });

            modelBuilder.Entity("Sunrise.Models.TeacherPermission", b =>
                {
                    b.Property<int>("TeacherPermissionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherPermissionID"));

                    b.Property<bool>("AcitveFlag")
                        .HasColumnType("bit");

                    b.Property<int>("ClassID")
                        .HasColumnType("int");

                    b.Property<string>("PermissionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TeacherPermissionID");

                    b.HasIndex("ClassID");

                    b.HasIndex("SubjectID");

                    b.HasIndex("UserID");

                    b.ToTable("TeacherPermissions");
                });

            modelBuilder.Entity("Sunrise.Models.Year", b =>
                {
                    b.Property<int>("YearID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YearID"));

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("AddmissionDate")
                        .HasColumnType("date");

                    b.Property<string>("YearAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("YearID");

                    b.ToTable("Years");

                    b.HasData(
                        new
                        {
                            YearID = 1,
                            ActiveFlag = true,
                            AddmissionDate = new DateOnly(2024, 11, 30),
                            YearAR = "1445-1446",
                            YearEN = "2024-2025"
                        });
                });

            modelBuilder.Entity("Sunrise.Models.YearManager", b =>
                {
                    b.Property<int>("YearManagerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YearManagerID"));

                    b.Property<string>("ControlManagerAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControlManagerEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradeID")
                        .HasColumnType("int");

                    b.Property<string>("SchoolManagerAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolManagerEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearID")
                        .HasColumnType("int");

                    b.HasKey("YearManagerID");

                    b.HasIndex("GradeID");

                    b.HasIndex("YearID");

                    b.ToTable("YearManagers");

                    b.HasData(
                        new
                        {
                            YearManagerID = 1,
                            ControlManagerAR = "اذ",
                            ControlManagerEN = "az",
                            GradeID = 1,
                            SchoolManagerAR = "مع",
                            SchoolManagerEN = "mo",
                            YearID = 1
                        });
                });

            modelBuilder.Entity("Sunrise.Models.YearSemester", b =>
                {
                    b.Property<int>("YearSemesterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YearSemesterID"));

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<int>("FinalMark")
                        .HasColumnType("int");

                    b.Property<int>("QuizCount")
                        .HasColumnType("int");

                    b.Property<string>("SemesterNameAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SemesterNameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SemesterNumber")
                        .HasColumnType("int");

                    b.Property<int>("YearID")
                        .HasColumnType("int");

                    b.HasKey("YearSemesterID");

                    b.HasIndex("YearID");

                    b.ToTable("YearSemesters");

                    b.HasData(
                        new
                        {
                            YearSemesterID = 1,
                            ActiveFlag = true,
                            FinalMark = 25,
                            QuizCount = 2,
                            SemesterNameAR = "الفصل الدراسي الأول",
                            SemesterNameEN = "First Semester",
                            SemesterNumber = 1,
                            YearID = 1
                        });
                });

            modelBuilder.Entity("Sunrise.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userType")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sunrise.Models.CurrentControl", b =>
                {
                    b.HasOne("Sunrise.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sunrise.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sunrise.Models.YearSemester", "YearSemester")
                        .WithMany()
                        .HasForeignKey("YearSemesterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");

                    b.Navigation("YearSemester");
                });

            modelBuilder.Entity("Sunrise.Models.GradeClass", b =>
                {
                    b.HasOne("Sunrise.Models.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("Sunrise.Models.Student", b =>
                {
                    b.HasOne("Sunrise.Models.Country", "CountryBirth")
                        .WithMany()
                        .HasForeignKey("BirthPlaceID");

                    b.HasOne("Sunrise.Models.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("BusID");

                    b.HasOne("Sunrise.Models.GradeClass", "CurrentClass")
                        .WithMany()
                        .HasForeignKey("CurrentClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sunrise.Models.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityID");

                    b.HasOne("Sunrise.Models.PreviousSchool", "PreviousSchool")
                        .WithMany()
                        .HasForeignKey("PreviousSchoolID");

                    b.HasOne("Sunrise.Models.GradeClass", "TemporaryClass")
                        .WithMany()
                        .HasForeignKey("TemporaryClassID");

                    b.Navigation("Bus");

                    b.Navigation("CountryBirth");

                    b.Navigation("CurrentClass");

                    b.Navigation("Nationality");

                    b.Navigation("PreviousSchool");

                    b.Navigation("TemporaryClass");
                });

            modelBuilder.Entity("Sunrise.Models.TeacherPermission", b =>
                {
                    b.HasOne("Sunrise.Models.GradeClass", "Class")
                        .WithMany()
                        .HasForeignKey("ClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sunrise.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sunrise.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Sunrise.Models.YearManager", b =>
                {
                    b.HasOne("Sunrise.Models.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sunrise.Models.Year", "Year")
                        .WithMany()
                        .HasForeignKey("YearID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("Sunrise.Models.YearSemester", b =>
                {
                    b.HasOne("Sunrise.Models.Year", "Year")
                        .WithMany()
                        .HasForeignKey("YearID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Year");
                });
#pragma warning restore 612, 618
        }
    }
}
