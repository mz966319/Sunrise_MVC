// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sunrise.DataAccess.Data;

#nullable disable

namespace Sunrise.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241015064158_12")]
    partial class _12
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sunrise.Models.Bus", b =>
                {
                    b.Property<int>("BusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusID"));

                    b.Property<int>("BusNumber")
                        .HasColumnType("int");

                    b.Property<string>("BusPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusPlate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BusID");

                    b.ToTable("Busses");

                    b.HasData(
                        new
                        {
                            BusID = 1,
                            BusNumber = 1,
                            BusPath = "Shemesi",
                            BusPlate = "ABC",
                            BusType = "Hilox",
                            DriverName = "Mo",
                            DriverPhone = "0500"
                        });
                });

            modelBuilder.Entity("Sunrise.Models.Country", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryID"));

                    b.Property<string>("CountryNameAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryNameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryID");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryID = 1,
                            CountryNameAR = "معاذ",
                            CountryNameEN = "Moaz"
                        });
                });

            modelBuilder.Entity("Sunrise.Models.Grade", b =>
                {
                    b.Property<int>("GradeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeID"));

                    b.Property<string>("CertificateNameAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertificateNameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradeLevel")
                        .HasColumnType("int");

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradeID");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            GradeID = 1,
                            CertificateNameAR = "روضة أول",
                            CertificateNameEN = "Kindergarten first grade",
                            GradeLevel = -1,
                            GradeName = "KG 1",
                            SchoolName = "G"
                        },
                        new
                        {
                            GradeID = 2,
                            CertificateNameAR = "روضة ثاني",
                            CertificateNameEN = "Kindergarten Seconde grade",
                            GradeLevel = -2,
                            GradeName = "KG 2",
                            SchoolName = "G"
                        },
                        new
                        {
                            GradeID = 3,
                            CertificateNameAR = "روضة ثالث",
                            CertificateNameEN = "Kindergarten Third grade",
                            GradeLevel = -3,
                            GradeName = "KG 3",
                            SchoolName = "G"
                        },
                        new
                        {
                            GradeID = 4,
                            CertificateNameAR = "الصف الأول الابتدائى",
                            CertificateNameEN = "Elementary first grade",
                            GradeLevel = 1,
                            GradeName = "Grad 1",
                            SchoolName = "G"
                        },
                        new
                        {
                            GradeID = 5,
                            CertificateNameAR = "الصف الثانى الابتدائى",
                            CertificateNameEN = "Elementary Seconde grade",
                            GradeLevel = 2,
                            GradeName = "Grad 2",
                            SchoolName = "G"
                        },
                        new
                        {
                            GradeID = 6,
                            CertificateNameAR = "الصف الثالث الابتدائى",
                            CertificateNameEN = "Elementary Third grade",
                            GradeLevel = 3,
                            GradeName = "Grad 3",
                            SchoolName = "G"
                        },
                        new
                        {
                            GradeID = 7,
                            CertificateNameAR = "الصف الرابع الابتدائى",
                            CertificateNameEN = "Elementary Fourth grade",
                            GradeLevel = 4,
                            GradeName = "Grad 4 B",
                            SchoolName = "B"
                        },
                        new
                        {
                            GradeID = 8,
                            CertificateNameAR = "الصف الرابع الابتدائي",
                            CertificateNameEN = "Elementary Fourth grade",
                            GradeLevel = 4,
                            GradeName = "Grad 4 G",
                            SchoolName = "G"
                        },
                        new
                        {
                            GradeID = 9,
                            CertificateNameAR = "الصف الخامس الابتدائى",
                            CertificateNameEN = "Elementary Fifth grade",
                            GradeLevel = 5,
                            GradeName = "Grad 5 B",
                            SchoolName = "B"
                        },
                        new
                        {
                            GradeID = 10,
                            CertificateNameAR = "الصف الخامس الابتدائى",
                            CertificateNameEN = "Elementary Fifth grade",
                            GradeLevel = 5,
                            GradeName = "Grad 5 G",
                            SchoolName = "G"
                        },
                        new
                        {
                            GradeID = 11,
                            CertificateNameAR = "الصف السادس الابتدائى",
                            CertificateNameEN = "Elementary Sixth grade",
                            GradeLevel = 6,
                            GradeName = "Grad 6 B",
                            SchoolName = "B"
                        },
                        new
                        {
                            GradeID = 12,
                            CertificateNameAR = "الصف السادس الابتدائى",
                            CertificateNameEN = "Elementary Sixth grade",
                            GradeLevel = 6,
                            GradeName = "Grad 6 G",
                            SchoolName = "G"
                        },
                        new
                        {
                            GradeID = 13,
                            CertificateNameAR = "الصف الأول المتوسط",
                            CertificateNameEN = "Intermediate First grade",
                            GradeLevel = 7,
                            GradeName = "Grad 7 B",
                            SchoolName = "B"
                        },
                        new
                        {
                            GradeID = 14,
                            CertificateNameAR = "الصف الأول المتوسط",
                            CertificateNameEN = "Intermediate First grade",
                            GradeLevel = 7,
                            GradeName = "Grad 7 G",
                            SchoolName = "G"
                        },
                        new
                        {
                            GradeID = 15,
                            CertificateNameAR = "الصف الثانى المتوسط",
                            CertificateNameEN = "Intermediate Second grade",
                            GradeLevel = 8,
                            GradeName = "Grad 8 B",
                            SchoolName = "B"
                        },
                        new
                        {
                            GradeID = 16,
                            CertificateNameAR = "الصف الثانى المتوسط",
                            CertificateNameEN = "Intermediate Second grade",
                            GradeLevel = 8,
                            GradeName = "Grad 8 G",
                            SchoolName = "G"
                        },
                        new
                        {
                            GradeID = 17,
                            CertificateNameAR = "الصف الثالث المتوسط",
                            CertificateNameEN = "Intermediate third grade",
                            GradeLevel = 9,
                            GradeName = "Grad 9 B",
                            SchoolName = "B"
                        },
                        new
                        {
                            GradeID = 18,
                            CertificateNameAR = "الصف الثالث المتوسط",
                            CertificateNameEN = "Intermediate third grade",
                            GradeLevel = 9,
                            GradeName = "Grad 9 G",
                            SchoolName = "G"
                        });
                });

            modelBuilder.Entity("Sunrise.Models.GradeClass", b =>
                {
                    b.Property<int>("GradeClassID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeClassID"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradeID")
                        .HasColumnType("int");

                    b.HasKey("GradeClassID");

                    b.HasIndex("GradeID");

                    b.ToTable("GradeClasses");

                    b.HasData(
                        new
                        {
                            GradeClassID = 1,
                            ClassName = "BA",
                            GradeID = 1
                        });
                });

            modelBuilder.Entity("Sunrise.Models.Nationality", b =>
                {
                    b.Property<int>("NationalityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NationalityID"));

                    b.Property<string>("NationalityARFemale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalityARMale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalityEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NationalityID");

                    b.ToTable("Nationalities");

                    b.HasData(
                        new
                        {
                            NationalityID = 1,
                            NationalityARFemale = "12",
                            NationalityARMale = "مصر",
                            NationalityEN = "Egypt"
                        });
                });

            modelBuilder.Entity("Sunrise.Models.PreviousSchool", b =>
                {
                    b.Property<int>("PreviousSchoolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PreviousSchoolID"));

                    b.Property<string>("PreviousSchoolNameAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousSchoolNameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PreviousSchoolID");

                    b.ToTable("PreviousSchools");

                    b.HasData(
                        new
                        {
                            PreviousSchoolID = 1,
                            PreviousSchoolNameAR = "مدارس شروق الشمس العالمية",
                            PreviousSchoolNameEN = "Sunrise International Schools"
                        });
                });

            modelBuilder.Entity("Sunrise.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentID"));

                    b.Property<DateOnly>("AdmissionDate")
                        .HasColumnType("date");

                    b.Property<bool>("AuditorFlag")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int>("BirthPlaceID")
                        .HasColumnType("int");

                    b.Property<bool>("BusFlag")
                        .HasColumnType("bit");

                    b.Property<int?>("BusID")
                        .HasColumnType("int");

                    b.Property<string>("BusSubscription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrentClassID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("IDEndDate")
                        .HasColumnType("date");

                    b.Property<string>("IDNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MatexParentID")
                        .HasColumnType("int");

                    b.Property<int?>("MatexStudentID")
                        .HasColumnType("int");

                    b.Property<int>("NationalityID")
                        .HasColumnType("int");

                    b.Property<string>("ParentPhone1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentPhones2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("PassportEndDate")
                        .HasColumnType("date");

                    b.Property<int>("PreviousSchoolID")
                        .HasColumnType("int");

                    b.Property<int>("StudentActiveFlag")
                        .HasColumnType("int");

                    b.Property<string>("StudentNameAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentID");

                    b.HasIndex("BirthPlaceID");

                    b.HasIndex("BusID");

                    b.HasIndex("CurrentClassID");

                    b.HasIndex("NationalityID");

                    b.HasIndex("PreviousSchoolID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentID = 1,
                            AdmissionDate = new DateOnly(2024, 10, 15),
                            AuditorFlag = false,
                            BirthDate = new DateOnly(2024, 10, 15),
                            BirthPlaceID = 1,
                            BusFlag = false,
                            BusID = 1,
                            BusSubscription = "ذهاب",
                            CreatedBy = "moaz",
                            CurrentClassID = 1,
                            DateCreated = new DateTime(2024, 10, 15, 9, 41, 56, 401, DateTimeKind.Local).AddTicks(4206),
                            Gender = "Male",
                            IDEndDate = new DateOnly(2024, 10, 15),
                            IDNumber = "12",
                            NationalityID = 1,
                            ParentPhone1 = "111",
                            ParentPhones2 = "222",
                            Passport = "A12",
                            PassportEndDate = new DateOnly(2024, 10, 15),
                            PreviousSchoolID = 1,
                            StudentActiveFlag = 0,
                            StudentNameAR = "معاذ",
                            StudentNameEN = "Moaz",
                            StudentPhone = "333"
                        });
                });

            modelBuilder.Entity("Sunrise.Models.Subject", b =>
                {
                    b.Property<int>("SubjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectID"));

                    b.Property<int>("NoorID")
                        .HasColumnType("int");

                    b.Property<string>("NoorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StaticFlag")
                        .HasColumnType("bit");

                    b.Property<string>("SubjectNameAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectNameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubjectID");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectID = 1,
                            NoorID = 291,
                            NoorName = "القرآن الكريم والدراسات الإسلامية",
                            StaticFlag = false,
                            SubjectNameAR = "الدراسات الإسلامية",
                            SubjectNameEN = "Islamic St."
                        },
                        new
                        {
                            SubjectID = 2,
                            NoorID = 157,
                            NoorName = "اللغة العربية",
                            StaticFlag = false,
                            SubjectNameAR = "اللغة العربية",
                            SubjectNameEN = "Arabic"
                        },
                        new
                        {
                            SubjectID = 3,
                            NoorID = 289,
                            NoorName = "الإجتماعيات",
                            StaticFlag = false,
                            SubjectNameAR = "الإجتماعيات",
                            SubjectNameEN = "Social Studies"
                        },
                        new
                        {
                            SubjectID = 4,
                            NoorID = 14,
                            NoorName = "اللغة الإنجليزية",
                            StaticFlag = false,
                            SubjectNameAR = "اللغة الإنجليزية",
                            SubjectNameEN = "English"
                        },
                        new
                        {
                            SubjectID = 5,
                            NoorID = 200548,
                            NoorName = "اللغة الفرنسية",
                            StaticFlag = false,
                            SubjectNameAR = "اللغة الفرنسية",
                            SubjectNameEN = "French"
                        },
                        new
                        {
                            SubjectID = 11,
                            NoorID = 16,
                            NoorName = "الرياضيات",
                            StaticFlag = false,
                            SubjectNameAR = "الرياضيات",
                            SubjectNameEN = "Mathematics"
                        },
                        new
                        {
                            SubjectID = 12,
                            NoorID = 201110,
                            NoorName = "اجتماعيات باللغة الانجليزية",
                            StaticFlag = false,
                            SubjectNameAR = "الاجتماعيات (بالانجليزي)",
                            SubjectNameEN = "Social Studies (Eng)"
                        },
                        new
                        {
                            SubjectID = 14,
                            NoorID = 46,
                            NoorName = "الحاسب الآلي",
                            StaticFlag = false,
                            SubjectNameAR = "الحاسب الآلي",
                            SubjectNameEN = "Computer"
                        },
                        new
                        {
                            SubjectID = 6,
                            NoorID = 74,
                            NoorName = "العلوم",
                            StaticFlag = false,
                            SubjectNameAR = "العلوم",
                            SubjectNameEN = "Science"
                        },
                        new
                        {
                            SubjectID = 15,
                            NoorID = 30,
                            NoorName = "التربية البدنية",
                            StaticFlag = true,
                            SubjectNameAR = "التربية البدنية",
                            SubjectNameEN = "Physical Education"
                        },
                        new
                        {
                            SubjectID = 16,
                            NoorID = 0,
                            NoorName = "السلوك",
                            StaticFlag = true,
                            SubjectNameAR = "السلوك",
                            SubjectNameEN = "Conduct"
                        },
                        new
                        {
                            SubjectID = 17,
                            NoorID = 0,
                            NoorName = "المواظبة",
                            StaticFlag = true,
                            SubjectNameAR = "المواظبة",
                            SubjectNameEN = "Attendance"
                        });
                });

            modelBuilder.Entity("Sunrise.Models.Year", b =>
                {
                    b.Property<int>("YearID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YearID"));

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("AddmissionDate")
                        .HasColumnType("date");

                    b.Property<string>("YearAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("YearID");

                    b.ToTable("Years");

                    b.HasData(
                        new
                        {
                            YearID = 1,
                            ActiveFlag = true,
                            AddmissionDate = new DateOnly(2024, 10, 15),
                            YearAR = "1444-1445",
                            YearEN = "2020-2021"
                        });
                });

            modelBuilder.Entity("Sunrise.Models.YearManager", b =>
                {
                    b.Property<int>("YearManagerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YearManagerID"));

                    b.Property<string>("ControlManagerAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControlManagerEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradeID")
                        .HasColumnType("int");

                    b.Property<string>("SchoolManagerAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolManagerEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearID")
                        .HasColumnType("int");

                    b.HasKey("YearManagerID");

                    b.HasIndex("GradeID");

                    b.HasIndex("YearID");

                    b.ToTable("YearManagers");

                    b.HasData(
                        new
                        {
                            YearManagerID = 1,
                            ControlManagerAR = "اذ",
                            ControlManagerEN = "az",
                            GradeID = 1,
                            SchoolManagerAR = "مع",
                            SchoolManagerEN = "mo",
                            YearID = 1
                        });
                });

            modelBuilder.Entity("Sunrise.Models.YearSemester", b =>
                {
                    b.Property<int>("YearSemesterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YearSemesterID"));

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<int>("FinalMark")
                        .HasColumnType("int");

                    b.Property<int>("QuizCount")
                        .HasColumnType("int");

                    b.Property<string>("SemesterNameAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SemesterNameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SemesterNumber")
                        .HasColumnType("int");

                    b.Property<int>("YearID")
                        .HasColumnType("int");

                    b.HasKey("YearSemesterID");

                    b.HasIndex("YearID");

                    b.ToTable("YearSemesters");

                    b.HasData(
                        new
                        {
                            YearSemesterID = 1,
                            ActiveFlag = true,
                            FinalMark = 25,
                            QuizCount = 2,
                            SemesterNameAR = "الفصل الدراسي الأول",
                            SemesterNameEN = "First Semester",
                            SemesterNumber = 1,
                            YearID = 1
                        });
                });

            modelBuilder.Entity("Sunrise.Models.GradeClass", b =>
                {
                    b.HasOne("Sunrise.Models.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("Sunrise.Models.Student", b =>
                {
                    b.HasOne("Sunrise.Models.Country", "CountryBirth")
                        .WithMany()
                        .HasForeignKey("BirthPlaceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sunrise.Models.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("BusID");

                    b.HasOne("Sunrise.Models.GradeClass", "CurrentClass")
                        .WithMany()
                        .HasForeignKey("CurrentClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sunrise.Models.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sunrise.Models.PreviousSchool", "PreviousSchool")
                        .WithMany()
                        .HasForeignKey("PreviousSchoolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("CountryBirth");

                    b.Navigation("CurrentClass");

                    b.Navigation("Nationality");

                    b.Navigation("PreviousSchool");
                });

            modelBuilder.Entity("Sunrise.Models.YearManager", b =>
                {
                    b.HasOne("Sunrise.Models.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sunrise.Models.Year", "Year")
                        .WithMany()
                        .HasForeignKey("YearID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("Sunrise.Models.YearSemester", b =>
                {
                    b.HasOne("Sunrise.Models.Year", "Year")
                        .WithMany()
                        .HasForeignKey("YearID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Year");
                });
#pragma warning restore 612, 618
        }
    }
}
