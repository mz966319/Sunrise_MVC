// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SunriseWeb.Data;

#nullable disable

namespace SunriseWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240926113428_updateStudent")]
    partial class updateStudent
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SunriseWeb.Models.Country", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryID"));

                    b.Property<string>("CountryNameAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryNameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalityARFemale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalityARMale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalityEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryID");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryID = 1,
                            CountryNameAR = "معاذ",
                            CountryNameEN = "Moaz",
                            NationalityARFemale = "12",
                            NationalityARMale = "مصر",
                            NationalityEN = "Egypt"
                        },
                        new
                        {
                            CountryID = 2,
                            CountryNameAR = "معاذ2",
                            CountryNameEN = "Moaz2",
                            NationalityARFemale = "122",
                            NationalityARMale = "2مصر",
                            NationalityEN = "Egypt2"
                        },
                        new
                        {
                            CountryID = 3,
                            CountryNameAR = "معاذ3",
                            CountryNameEN = "Moaz3",
                            NationalityARFemale = "123",
                            NationalityARMale = "3مصر",
                            NationalityEN = "Egypt3"
                        });
                });

            modelBuilder.Entity("SunriseWeb.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentID"));

                    b.Property<DateOnly>("AdmissionDate")
                        .HasColumnType("date");

                    b.Property<int>("AuditorFlag")
                        .HasColumnType("int");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int>("BirthPlaceID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrentClassID")
                        .HasColumnType("int");

                    b.Property<int>("CurrentGradeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("IDEndDate")
                        .HasColumnType("date");

                    b.Property<string>("IDNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NationalityID")
                        .HasColumnType("int");

                    b.Property<string>("Passport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("PassportEndDate")
                        .HasColumnType("date");

                    b.Property<string>("PhoneNumber1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousSchoolAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousSchoolEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentActiveFlag")
                        .HasColumnType("int");

                    b.Property<string>("StudentNameAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentID = 4,
                            AdmissionDate = new DateOnly(2024, 9, 26),
                            AuditorFlag = 0,
                            BirthDate = new DateOnly(2024, 9, 26),
                            BirthPlaceID = 1,
                            CreatedBy = "",
                            CurrentClassID = 1,
                            CurrentGradeID = 1,
                            DateCreated = new DateTime(2024, 9, 26, 14, 34, 27, 328, DateTimeKind.Local).AddTicks(2120),
                            DateUpdated = new DateTime(2024, 9, 26, 14, 34, 27, 328, DateTimeKind.Local).AddTicks(2135),
                            Gender = "Male",
                            IDEndDate = new DateOnly(2024, 9, 26),
                            IDNumber = "12",
                            NationalityID = 1,
                            Passport = "A12",
                            PassportEndDate = new DateOnly(2024, 9, 26),
                            PhoneNumber1 = "",
                            PhoneNumber2 = "",
                            PreviousSchoolAR = "مدارس",
                            PreviousSchoolEN = "",
                            StudentActiveFlag = 0,
                            StudentNameAR = "معاذ",
                            StudentNameEN = "Moaz",
                            UpdatedBy = ""
                        },
                        new
                        {
                            StudentID = 5,
                            AdmissionDate = new DateOnly(2024, 9, 26),
                            AuditorFlag = 0,
                            BirthDate = new DateOnly(2024, 9, 26),
                            BirthPlaceID = 10,
                            CreatedBy = "",
                            CurrentClassID = 1,
                            CurrentGradeID = 1,
                            DateCreated = new DateTime(2024, 9, 26, 14, 34, 27, 328, DateTimeKind.Local).AddTicks(2140),
                            DateUpdated = new DateTime(2024, 9, 26, 14, 34, 27, 328, DateTimeKind.Local).AddTicks(2140),
                            Gender = "",
                            IDEndDate = new DateOnly(2024, 9, 26),
                            IDNumber = "22",
                            NationalityID = 10,
                            Passport = "A22",
                            PassportEndDate = new DateOnly(2024, 9, 26),
                            PhoneNumber1 = "",
                            PhoneNumber2 = "",
                            PreviousSchoolAR = "شروق",
                            PreviousSchoolEN = "",
                            StudentActiveFlag = 0,
                            StudentNameAR = "موزة",
                            StudentNameEN = "Moza",
                            UpdatedBy = ""
                        },
                        new
                        {
                            StudentID = 6,
                            AdmissionDate = new DateOnly(2024, 9, 26),
                            AuditorFlag = 0,
                            BirthDate = new DateOnly(2024, 9, 26),
                            BirthPlaceID = 10,
                            CreatedBy = "",
                            CurrentClassID = 1,
                            CurrentGradeID = 1,
                            DateCreated = new DateTime(2024, 9, 26, 14, 34, 27, 328, DateTimeKind.Local).AddTicks(2145),
                            DateUpdated = new DateTime(2024, 9, 26, 14, 34, 27, 328, DateTimeKind.Local).AddTicks(2145),
                            Gender = "Female",
                            IDEndDate = new DateOnly(2024, 9, 26),
                            IDNumber = "123",
                            NationalityID = 10,
                            Passport = "G12",
                            PassportEndDate = new DateOnly(2024, 9, 26),
                            PhoneNumber1 = "",
                            PhoneNumber2 = "",
                            PreviousSchoolAR = "الشمس",
                            PreviousSchoolEN = "",
                            StudentActiveFlag = 0,
                            StudentNameAR = "زوز",
                            StudentNameEN = "Zoz",
                            UpdatedBy = ""
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
